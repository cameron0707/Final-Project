---
title: "Results"
execute: 
  warning: false
  error: false
output:
  html_document:
    toc: true
    toc_depth: 4
    theme: bootstrap
    highlight: breezedark
    code-fold: true
---

## Libraries and Packages

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(knitr)
```

```{r, eval=FALSE}
if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("ggtree")
```

```{r}
library(tidyverse)
library(ggtree)
# added treeio and ggimage library
library(treeio)
library(ggimage)
library(rphylopic)
```

```{r}
library(tidyverse)
library(knitr)
library(ggtree)
library(TDbook) #A Companion Package for the Book "Data Integration, Manipulation and Visualization of Phylogenetic Trees" by Guangchuang Yu (2022, ISBN:9781032233574).
library(ggimage)
library(rphylopic)
library(treeio)
library(tidytree)
library(ape)
library(TreeTools)
library(phytools)
library(ggnewscale)
library(ggstar)
```

```{r}
if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("Biostrings")
```

```{r, eval=FALSE}
install.packages("boot")
install.packages("codetools")
install.packages("lattice")
install.packages("survival")
```

## Loaded Data

```{r}
NEON_MAGs <- read_csv("data/NEON/GOLD_Study_ID_Gs0161344_NEON_edArchaea.csv") %>% 
  # remove columns that are not needed for data analysis
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %>% 
  # create a new column with the Assembly Type
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus"), "; ", remove = FALSE) %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r}
NEON_metagenomes <- read_tsv("data/NEON/exported_img_data_Gs0161344_NEON.tsv") %>% 
  rename(`Genome Name` = `Genome Name / Sample Name`) %>% 
  filter(str_detect(`Genome Name`, 're-annotation', negate = T)) %>% 
  filter(str_detect(`Genome Name`, 'WREF plot', negate = T)) 
```

```{r}
NEON_metagenomes <- NEON_metagenomes %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r}
NEON_chemistry <- read_tsv("data/NEON/neon_plot_soilChem1_metadata.tsv") %>% 
  # remove -COMP from genomicsSampleID
  mutate_at("genomicsSampleID", str_replace, "-COMP", "") 
```

```{r}
NEON_MAGs_metagenomes_chemistry <- NEON_MAGs %>% 
  left_join(NEON_metagenomes, by = "Sample Name") %>%
  left_join(NEON_chemistry, by = c("Sample Name" = "genomicsSampleID"))
head(NEON_MAGs_metagenomes_chemistry)
```

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria <- NEON_MAGs_metagenomes_chemistry %>% 
  left_join(NEON_metagenomes, by = "Sample Name") %>%
  left_join(NEON_chemistry, by = c("Sample Name" = "genomicsSampleID")) %>%
  filter(`Class`== "Alphaproteobacteria")
head(NEON_MAGs_metagenomes_chemistry_alphaproteobacteria)
```

```{r}
NEON_chemistry_select <- NEON_chemistry %>%
  select(`genomicsSampleID`, `siteID`, `nlcdClass`)
head(NEON_chemistry_select)
```

```{r}
NEON_MAGs_select <- NEON_MAGs %>%
  select(`Sample Name`, `Site ID`, `GTDB-Tk Taxonomy Lineage`)
  head(NEON_MAGs)
```

```{r}
filtered_data <- NEON_MAGs_metagenomes_chemistry %>% 
  filter(`Site.x` == "Chase Lake Wetlands")
```

```{r}
NEON_MAGs_select_WOOD <- NEON_MAGs_select %>%
  filter(`Site ID`== "WOOD")
  head(NEON_MAGs_select_WOOD)
```

```{r}
NEON_metagenomes_select <- NEON_metagenomes %>%
  select(`Sample Name`, `Site ID`, `Ecosystem Subtype`)
head(NEON_metagenomes_select)
```

```{r}
NEON_metagenomes_select_WOOD <- NEON_MAGs_metagenomes_chemistry %>%
  filter(`Site ID.x`== "WOOD")
  head(NEON_metagenomes_select_WOOD)
```

```{r}
NEON_metagenomes_select_WOOD %>% 
  left_join(NEON_MAGs_select_WOOD, by = "Sample Name")
```

## Graphs

### 1

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%  
ggplot(aes(x = `soilTemp.x`, y = Site.x)) +
  geom_boxplot()
```

This boxplot shows the distribution of soil temperatures at several NEON locations, including Chase Lake Wetlands. The information shows the regional variations in soil temperature.

### 2

```{r}
ggplot(NEON_MAGs_metagenomes_chemistry_alphaproteobacteria, aes(x = `soilTemp.x`, y = `Ecosystem Subtype.x`, color = Class)) +
  geom_point() +
  labs(title = "Scatterplot of Soil Temperature vs Ecosystem Subtype",
       x = "soilTemp",
       y = "Ecosystem Subtype",
       color = "Class")
```

The link between soil temperature and Alphaproteobacteria ecosystem subtype is seen in this scatterplot. The map makes it easier to see which subtypes of ecosystems are linked to certain temperature ranges.

### 3

```{r}
ggplot(NEON_MAGs_metagenomes_chemistry_alphaproteobacteria, aes(x = `soilInCaClpH.x`, y = nlcdClass.x, color = Class)) +
  geom_point() +
  labs(title = "soilInCaClpH vs nlcdClass",
       x = "soilInCaClpH",
       y = "nlcdClass",
       color = "Class")
```

This scatterplot shows how soil pH affects the distribution of Alphaproteobacteria across various land cover types by displaying the link between soil pH and the National Land Cover Database (NLCD) class.

### 4

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
ggplot(aes(x = `Total Number of Bases`)) +
  geom_histogram(bins = 100) 
```

The overall distribution of total bases in the Alpha-Proteobacteria genomic data is represented by this histogram, which also displays the frequency of various sequence lengths.

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%   
  filter(is.na(Domain) | is.na(Phylum) | is.na(Class) | is.na(Order) | is.na(Family) | is.na(Genus)) %>%
  # Add another operation here, e.g., select specific columns
  select(Domain, Phylum, Class, Order, Family, Genus)
```

### 5

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%   
  filter(is.na(Domain) | is.na(Phylum)| is.na(Class) | is.na(Order) | is.na(Family) | is.na(Genus)) %>%
ggplot(aes(x = `Bin Quality`)) + 
  geom_bar(width = 0.5)
```

This bar graph displays the high quality (HQ) and medium quality (MQ) genomic assemblies of alpha-proteobacteria bins.

### 6

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
ggplot(aes(x = fct_infreq(`Site ID`))) +
  geom_bar() +
  coord_flip()
```

This bar plot shows the frequency of Alpha-Proteobacteria sequences across different NEON sites.

### 7

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
ggplot(aes(x = `Gene Count`)) +
  geom_histogram(bins = 100) 
```

This histogram shows how many Alphaproteobacteria have a certain number of genes.

### 8

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
ggplot(aes(x = `tRNA Genes`)) +
  geom_histogram(bins = 100) 
```

This histogram shows the distribution of gene counts and tRNA genes in the Alpha-Proteobacteria genomic data, illustrating the genomic complexity of these bacteria.

### 9

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%   
  filter(is.na(Domain) | is.na(Phylum)| is.na(Class) | is.na(Order) | is.na(Family) | is.na(Genus)) %>%
ggplot(aes(x = `Assembly Type`)) + 
  geom_bar(width = 0.5)
```

This graph shows the taxonomic data across different assembly types. This could help in identifying if certain assembly types are more prone to producing incomplete taxonomic information.

### 10

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%   
  filter(is.na(Domain) | is.na(Phylum)| is.na(Class) | is.na(Order) | is.na(Family) | is.na(Genus)) %>%
ggplot(aes(x = `Site ID.x`)) + 
  geom_bar(width = 0.5)
```

This bar plot shows the distribution of genomic assemblies by type (combined vs. individual) and by site ID for Alphaproteobacteria.

### 11

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%  
ggplot(aes(x = `Scaffold Count`, y = `Site.x`)) +
  geom_boxplot()
```

This boxplot shows the distribution of scaffold counts (segments of DNA) across different sites and ecosystem subtypes.

### 12

```{r}
ggplot(NEON_MAGs_metagenomes_chemistry_alphaproteobacteria, aes(x = `Depth In Meters.x`, y = `Elevation In Meters.x`, color = Class)) +
  geom_point() +
  labs(title = "Depth In Meters vs Elevation In Meters",
       x = "Depth In Meters",
       y = "Elevation In Meters",
       color = "Class")
```

The scatter plot shows the relationship between the depth and elevation of the class alphaproteobacteria. Each point represents a sample taken at a specific depth and elevation.

### 13

```{r}
ggplot(NEON_MAGs_metagenomes_chemistry_alphaproteobacteria, aes(x = `Bin Completeness`, y = `Bin Contamination`, color = Class)) +
  geom_point() +
  labs(title = "Bin Completeness vs Bin Contamination",
       x = "Bin Completeness",
       y = "Bin Contamination",
       color = "Class")
```

This scatterplot shows the relationship between bin completeness and contamination in alphaproteobacteria.

### 14

```{r}
ggplot(NEON_MAGs_metagenomes_chemistry_alphaproteobacteria, aes(x = `Gene Count`, y = `Scaffold Count`, color = Class)) +
  geom_point() +
  labs(title = "Gene Count vs Scaffold Count",
       x = "Gene Count",
       y = "Scaffold Count",
       color = "Class")
```

### 15

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>%  
ggplot(aes(x = `Gene Count`, y = `Scaffold Count`)) +
  geom_boxplot()
```

This scatterplot and boxplot show the relationship between gene count and scaffold count for Alpha-Proteobacteria, indicating the genomic assembly quality.

```{r}
NEON_MAGs <- read_csv("data/NEON/GOLD_Study_ID_Gs0161344_NEON_2024_4_21.csv") %>% 
  # remove columns that are not needed for data analysis
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`, `Bin Lineage`)) %>% 
  # create a new column with the Assembly Type
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "d__", "") %>%  
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "p__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "c__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "o__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "f__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "g__", "") %>% 
  mutate_at("GTDB-Tk Taxonomy Lineage", str_replace, "s__", "") %>%
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), ";", remove = FALSE) %>% 
  mutate_at("Domain", na_if,"") %>% 
  mutate_at("Phylum", na_if,"") %>% 
  mutate_at("Class", na_if,"") %>% 
  mutate_at("Order", na_if,"") %>% 
  mutate_at("Family", na_if,"") %>% 
  mutate_at("Genus", na_if,"") %>% 
  mutate_at("Species", na_if,"") %>% 
  
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r}
NEON_metagenomes <- read_tsv("data/NEON/exported_img_data_Gs0161344_NEON.tsv") %>% 
  select(-c(`Domain`, `Sequencing Status`, `Sequencing Center`)) %>% 
  rename(`Genome Name` = `Genome Name / Sample Name`) %>% 
  filter(str_detect(`Genome Name`, 're-annotation', negate = T)) %>% 
  filter(str_detect(`Genome Name`, 'WREF plot', negate = T)) 
```

```{r}
NEON_metagenomes <- NEON_metagenomes %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-")
```

```{r}
NEON_chemistry <- read_tsv("data/NEON/neon_plot_soilChem1_metadata.tsv") %>% 
  # remove -COMP from genomicsSampleID
  mutate_at("genomicsSampleID", str_replace, "-COMP", "") 
```

```{r}
NEON_MAGs_metagenomes_chemistry <- NEON_MAGs %>% 
  left_join(NEON_metagenomes, by = "Sample Name") %>% 
  left_join(NEON_chemistry, by = c("Sample Name" = "genomicsSampleID")) %>% 
  rename("label" = "Bin ID")
```

```{r}
tree_arc <- read.tree("data/NEON/gtdbtk.ar53.decorated(1).tree")
tree_bac <- read.tree("data/NEON/gtdbtk.bac120.decorated.tree")
```

```{r}
# Make a vector with the internal node labels
node_vector_bac = c(tree_bac$tip.label,tree_bac$node.label)

# Search for your Phylum or Class to get the node
grep("Alpha", node_vector_bac, value = TRUE)
```

```{r}
match(grep("Alpha", node_vector_bac, value = TRUE), node_vector_bac)
```

```{r}
# First need to preorder tree before extracting. N
tree_bac_preorder <- Preorder(tree_bac)
tree_Alpha <- Subtree(tree_bac_preorder, 3171)
```

```{r}
NEON_MAGs_Alpha <- NEON_MAGs_metagenomes_chemistry %>% 
  filter(Phylum == "Alpha") 
```

### 16

```{r, fig.height= 100, fig.width= 20}
ggtree(tree_Alpha) +
  geom_tiplab(size=8) +
  xlim(0,40)
```

The graph shows the phylogenetic relationships among the taxa represented in alphaproteobacteria.

### 17

```{r, fig.height = 40, fig.width = 20}
ggtree(tree_Alpha, layout="circular")  %<+%
  NEON_MAGs_metagenomes_chemistry + 
  geom_tiplab(size=2, hjust=-.1) +
  xlim(0,30) +
  geom_point(mapping=aes(color=Class))
```

This circular phylogenetic tree represents the evolutionary relationships among Alpha-Proteobacteria, with annotations for different sites and assembly types.

```{r}
NEON_MAGs <- read_csv("data/NEON/GOLD_Study_ID_Gs0161344_NEON.csv") %>% 
  # remove columns that are not needed for data analysis
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %>% 
  # create a new column with the Assembly Type
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus"), "; ", remove = FALSE) %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-")
```

```{r}
NEON_MAGs_bact_ind <- NEON_MAGs %>% 
  filter(Domain == "Bacteria") %>% 
  filter(`Assembly Type` == "Individual") 
```

### 18

```{r, fig.width = 10}
colnames(NEON_MAGs_bact_ind)
NEON_MAGs_bact_ind %>% 
  ggplot(aes(x = `Site ID`, y = `Phylum`, color = Phylum)) +
  geom_point() +
  labs(title = "Site ID vs Number of Genes by Phylum")
```

This is a scatter plot that shows how different phyla's gene numbers are distributed across each site. Every dot is a unique combination of a site and a phylum; the phylum is shown by the dot's position on the y-axis, and the site is indicated by its position on the x-axis. The legend on the right side of the graph indicates which phyla are represented by the color of the dots.

### 19

```{r}
NEON_MAGs_bact_ind %>% 
  filter(`Site ID` == "WOOD") %>%
  ggplot(aes(x = `Site ID`, y = `Phylum`, color = Phylum)) +
  geom_point() +
  labs(title = "Site ID vs Phylum for Site 'WOOD'") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) 
```

This graph shows all the different phyla at the WOOD site.

### 20

```{r}
filtered_data <- NEON_MAGs_bact_ind %>% 
  filter(Phylum == "Proteobacteria")

ggplot(filtered_data, aes(x = `Site ID`, y = `Phylum`, color = Phylum)) +
  geom_point() +
  labs(title = "Site ID vs Phylum: Proteobacteria") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(hjust = 0.5))
```

This graph shows all the sites where Proteobacteria is present.

```{r}
NEON_MAGs <- read_csv("data/NEON/GOLD_Study_ID_Gs0161344_NEON.csv") %>% 
  # remove columns that are not needed for data analysis
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %>% 
  # create a new column with the Assembly Type
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus"), "; ", remove = FALSE) %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-")
```

```{r}
kable(
  NEON_MAGs %>% 
    filter(Site == "Chase Lake Wetlands, North Dakota, USA")
)
```

### 21

```{r}
  NEON_MAGs %>% 
    filter(Site == "Chase Lake Wetlands, North Dakota, USA")%>%
    ggplot(aes(x = Class))+
    geom_bar()+
    coord_flip()
```

The distribution of bacterial classes in the Chase Lake Wetlands is shown in this bar graph. The y-axis lists the different bacterial classes found in the samples, while the x-axis indicates the number of incidences for each bacterial class.

```{r}
kable(
  NEON_MAGs %>% 
    filter(Site == "Chase Lake Wetlands, North Dakota, USA")
)
```

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria <- NEON_MAGs %>%
  filter(`Class`== "Alphaproteobacteria")
```

```{r}
NEON_MAGs <- read_csv("data/NEON/GOLD_Study_ID_Gs0161344_NEON_edArchaea.csv") %>% 
  # remove columns that are not needed for data analysis
  select(-c(`GOLD Study ID`, `Bin Methods`, `Created By`, `Date Added`)) %>% 
  # create a new column with the Assembly Type
  mutate("Assembly Type" = case_when(`Genome Name` == "NEON combined assembly" ~ `Genome Name`,
                            TRUE ~ "Individual")) %>% 
  mutate_at("Assembly Type", str_replace, "NEON combined assembly", "Combined") %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus"), "; ", remove = FALSE) %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-") 
```

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria <- NEON_MAGs %>%
  filter(`Class`== "Alphaproteobacteria")
```

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_ind <- NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
  filter(`Assembly Type` == "Individual") 
```

```{r}
# Select the GTDB Taxonomic lineage and separate into taxonomic levels
alpha_data <- NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_ind %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  # NAs are likely Archaea
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Alphaproteobacteria')) %>% 
  # Pavian format requires p__ etc
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), "; ") 
```

### 22

```{r}

alpha_data[] <- t(apply(alpha_data, 1, zoo::na.locf))



alpha_data <- alpha_data %>% 
  unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")  


alpha_data_s <- alpha_data
alpha_data_g <- alpha_data
alpha_data_f <- alpha_data
alpha_data_o <- alpha_data
alpha_data_c <- alpha_data
alpha_data_p <- alpha_data
alpha_data_d <- alpha_data

alpha_data_g$classification <- sub("\\|s__.*", "", alpha_data_g$classification)  
alpha_data_f$classification <- sub("\\|g__.*", "", alpha_data_f$classification)  
alpha_data_o$classification <- sub("\\|f__.*", "", alpha_data_o$classification)  
alpha_data_c$classification <- sub("\\|o__.*", "", alpha_data_c$classification)  
alpha_data_p$classification <- sub("\\|c__.*", "", alpha_data_p$classification)  
alpha_data_d$classification <- sub("\\|p__.*", "", alpha_data_d$classification)  

alpha_data_allTaxa <- bind_rows(alpha_data_s, alpha_data_g, alpha_data_f, alpha_data_o, alpha_data_c, alpha_data_p, alpha_data_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 


write_tsv(alpha_data_allTaxa, "NEON_MAG__alpha_ind_pavian.txt")
```

![](alpha_ind.png)

This individual Sankey Plot shows the taxonomic lineage from alphaproteobacteria which shows all the bacteria that evolved from it.

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria <- NEON_MAGs %>%
  filter(`Class`== "Alphaproteobacteria")
```

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_co <- NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
  filter(`Assembly Type` == "Combined") 
```

```{r}
alpha_dataco <- NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_co %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  # NAs are likely Archaea
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Alphaproteobacteria')) %>% 
  # Pavian format requires p__ etc
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), "; ") 
```

### 23

```{r}

alpha_dataco[] <- t(apply(alpha_dataco, 1, zoo::na.locf))



alpha_dataco <- alpha_dataco %>% 
  unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")  


alpha_dataco_s <- alpha_dataco
alpha_dataco_g <- alpha_dataco
alpha_dataco_f <- alpha_dataco
alpha_dataco_o <- alpha_dataco
alpha_dataco_c <- alpha_dataco
alpha_dataco_p <- alpha_dataco
alpha_dataco_d <- alpha_dataco

alpha_dataco_g$classification <- sub("\\|s__.*", "", alpha_dataco_g$classification)  
alpha_dataco_f$classification <- sub("\\|g__.*", "", alpha_dataco_f$classification)  
alpha_dataco_o$classification <- sub("\\|f__.*", "", alpha_dataco_o$classification)  
alpha_dataco_c$classification <- sub("\\|o__.*", "", alpha_dataco_c$classification)  
alpha_dataco_p$classification <- sub("\\|c__.*", "", alpha_dataco_p$classification)  
alpha_dataco_d$classification <- sub("\\|p__.*", "", alpha_dataco_d$classification)  

alpha_dataco_allTaxa <- bind_rows(alpha_dataco_s, alpha_dataco_g, alpha_dataco_f, alpha_dataco_o, alpha_dataco_c, alpha_dataco_p, alpha_dataco_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 


write_tsv(alpha_dataco_allTaxa, "NEON_MAG_alpha_co_pavian.txt")
```

![](images/NEON_MAG_Co.png)

This combined Sankey plot shows the taxonomic lineage of bacteria across all samples, helping to identify common taxa and general trends.

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_all <- NEON_MAGs %>%
  filter(`Site ID` == "WOOD")
```

```{r}
NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_all <- NEON_MAGs_metagenomes_chemistry_alphaproteobacteria %>% 
   filter(`Site ID` == "WOOD") 
```

```{r}
# Select the GTDB Taxonomic lineage and separate into taxonomic levels
alpha_data_all <- NEON_MAGs_metagenomes_chemistry_alphaproteobacteria_all %>% 
  select(`GTDB-Tk Taxonomy Lineage`) %>% 
  # NAs are likely Archaea
  replace_na(list(`GTDB-Tk Taxonomy Lineage` = 'Alphaproteobacteria')) %>% 
  # Pavian format requires p__ etc
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"), "; ") 
```

### 24

```{r}
alpha_data_all[] <- t(apply(alpha_data_all, 1, zoo::na.locf))


alpha_data_all <- alpha_data_all %>% 
  unite(col = "classification", c(Domain, Phylum, Class, Order, Family, Genus, Species), sep='; ') %>% 
  mutate_at("classification", str_replace, "Archaea", "d__Archaea") %>% 
  mutate_at("classification", str_replace, "Bacteria", "d__Bacteria") %>%  
  mutate_at("classification", str_replace, "; ", "|p__") %>% 
  mutate_at("classification", str_replace, "; ", "|c__") %>% 
  mutate_at("classification", str_replace, "; ", "|o__") %>% 
  mutate_at("classification", str_replace, "; ", "|f__") %>% 
  mutate_at("classification", str_replace, "; ", "|g__") %>% 
  mutate_at("classification", str_replace, "; ", "|s__")  


alpha_data_all_s <- alpha_data_all
alpha_data_all_g <- alpha_data_all
alpha_data_all_f <- alpha_data_all
alpha_data_all_o <- alpha_data_all
alpha_data_all_c <- alpha_data_all
alpha_data_all_p <- alpha_data_all
alpha_data_all_d <- alpha_data_all

alpha_data_all_g$classification <- sub("\\|s__.*", "", alpha_data_all_g$classification)  
alpha_data_all_f$classification <- sub("\\|g__.*", "", alpha_data_all_f$classification)  
alpha_data_all_o$classification <- sub("\\|f__.*", "", alpha_data_all_o$classification)  
alpha_data_all_c$classification <- sub("\\|o__.*", "", alpha_data_all_c$classification)  
alpha_data_all_p$classification <- sub("\\|c__.*", "", alpha_data_all_p$classification)  
alpha_data_all_d$classification <- sub("\\|p__.*", "", alpha_data_all_d$classification)  

alpha_data_all_allTaxa <- bind_rows(alpha_data_all_s, alpha_data_all_g, alpha_data_all_f, alpha_data_all_o, alpha_data_all_c, alpha_data_all_p, alpha_data_all_d) %>% 
  mutate(classification = as.factor(classification)) %>% 
  count(classification) %>% 

  rename(`#SampleID` = `classification`) %>% 
  rename(`Metaphlan2_Analysis` = `n`) 


write_tsv(alpha_data_all_allTaxa, "NEON_MAG_alpha_all_pavian.txt")
```

![](images/Screen%20Shot%202024-05-20%20at%201.00.17%20AM.png)

This Sankey plot shows the taxonomic lineage of bacteria at WOOD site.

```{r}
library(DT)
```

```{r}
NEON_MAGs <- read_csv("data/NEON/GOLD_Study_ID_Gs0161344_NEON.csv")
```

```{r}
head(NEON_MAGs)
```

```{r}
str(NEON_MAGs)
```

```{r}
NEON_MAGs_Ind <- NEON_MAGs %>% 
  filter(`Genome Name` != "NEON combined assembly") 
```

```{r}
datatable(
NEON_MAGs_Ind %>% 
  filter(str_detect(`Genome Name`, 'Chase Lake'))
)
```

```{r}
NEON_MAGs_Ind_tax <- NEON_MAGs_Ind %>% 
  separate(`GTDB-Tk Taxonomy Lineage`, c("Domain", "Phylum", "Class", "Order", "Family", "Genus"), "; ", remove = FALSE) 
```

```{r}
NEON_MAGs_Ind_tax_sample <- NEON_MAGs_Ind_tax %>% 
  # Get rid of the the common string "Soil microbial communities from "
  mutate_at("Genome Name", str_replace, "Terrestrial soil microbial communities from ", "") %>% 
  # Use the first `-` to split the column in two
  separate(`Genome Name`, c("Site","Sample Name"), " - ") %>% 
  # Get rid of the the common string "S-comp-1"
  mutate_at("Sample Name", str_replace, "-comp-1", "") %>%
  # separate the Sample Name into Site ID and plot info
  separate(`Sample Name`, c("Site ID","subplot.layer.date"), "_", remove = FALSE,) %>% 
  # separate the plot info into 3 columns
  separate(`subplot.layer.date`, c("Subplot", "Layer", "Date"), "-",) 
```


### 25

```{r}
library(ggplot2)

data <- data.frame(
  Site = c(
   
    "Chase Lake Wetlands, North Dakota, USA"
    
  ),
  Count = c(69)
)

ggplot(data, aes(x = reorder(Site, Count), y = Count)) +
  geom_bar(stat = "identity", fill = "green4") +
  coord_flip() +
  labs(title = "Count of Class Alphaproteobacteria at Each Site", x = "Site", y = "Count") +
  theme_minimal()
```

The graph shows the count of the class Alphaproteobacteria at Chase Lake Wetlands.

### 26

```{r}
library(dplyr)
library(ggplot2)


proteobacteria_site_count <- NEON_MAGs_Ind_tax_sample %>% 
  filter(str_detect(Class, "Alpha")) %>%
  count(Site, sort = TRUE)


ggplot(proteobacteria_site_count, aes(x = reorder(Site, -n), y = n, fill = Site)) +
  geom_bar(stat = "identity") +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 5),  # 
        plot.title = element_text(size = 12),  
        legend.text = element_text(size = 4)) +  
  labs(title = "Count of Alphaproteobacteria by Site", x = "Site", y = "Count")
```

This plot visualizes the count of Alphaproteobacteria observed at each site, with bars sorted by count and colored according to the site
